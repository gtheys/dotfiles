#!/bin/sh

# Increment, decrement, or mute the volume using Pipewire and send a notification

case $1 in
up)
  # Set the volume on (if it was muted)
  wpctl set-mute @DEFAULT_AUDIO_SINK@ 0
  wpctl set-volume -l 2.0 @DEFAULT_AUDIO_SINK@ 5%+
  ;;
down)
  wpctl set-mute @DEFAULT_AUDIO_SINK@ 0
  wpctl set-volume -l 2.0 @DEFAULT_AUDIO_SINK@ 5%-
  ;;
mute)
  wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle
  ;;
esac

# Extract volume as a decimal (e.g., 0.49) and convert to percentage
VOLUME=$(wpctl get-volume @DEFAULT_AUDIO_SINK@ | sed 's/Volume: //' | awk '{printf "%.0f", $1 * 100}')

send_notification() {
  if [ "$1" = "mute" ]; then ICON="audio-volume-muted"; elif [ "$VOLUME" -lt 33 ]; then ICON="audio-volume-low"; elif [ "$VOLUME" -lt 66 ]; then ICON="audio-volume-medium"; else ICON="audio-volume-high"; fi
  if [ "$1" = "mute" ]; then TEXT="Currently muted"; else TEXT="Currently at ${VOLUME}%"; fi

  dunstify -a "Volume" -i "$ICON" "Volume" "$TEXT" -t 2000
}

case $1 in
mute)
  case "$(wpctl get-volume @DEFAULT_AUDIO_SINK@)" in
  *MUTED*) send_notification mute ;;
  *) send_notification ;;
  esac
  ;;
*)
  send_notification
  ;;
esac
